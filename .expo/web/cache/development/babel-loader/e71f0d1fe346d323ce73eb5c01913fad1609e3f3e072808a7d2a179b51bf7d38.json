{"ast":null,"code":"import React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { WebView } from 'react-native-webview';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nfunction HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      children: [_jsx(View, {\n        style: styles.imageView,\n        children: _jsx(Image, {\n          source: require(\"./assets/slackProfilePicture.png\"),\n          style: styles.profilePics\n        })\n      }), _jsx(Text, {\n        style: styles.slackName,\n        children: \"AjKenz\"\n      })]\n    }), _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.navigate('Web');\n      },\n      style: styles.button,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Open GitHub\"\n      })\n    })]\n  });\n}\nfunction WebScreen() {\n  var gitUrl = 'https://github.com/AjKenz';\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(WebView, {\n      source: {\n        uri: gitUrl\n      },\n      style: styles.webViewStyle\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#fff0',\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  imageView: {\n    borderRadius: 10,\n    elevation: 5,\n    shadowColor: 'black',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.4,\n    shadowRadius: 3\n  },\n  profilePics: {\n    width: 300,\n    height: 300,\n    borderRadius: 10,\n    resizeMode: 'stretch'\n  },\n  slackName: {\n    fontWeight: 'bold',\n    fontSize: 30,\n    color: '#000'\n  },\n  button: {\n    width: '30%',\n    height: 50,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: 50,\n    marginVertical: 50,\n    borderWidth: 2,\n    elevation: 5,\n    shadowColor: 'black',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.4,\n    shadowRadius: 3\n  },\n  buttonText: {\n    color: '#000',\n    fontWeight: 'bold'\n  },\n  webViewStyle: {\n    width: Dimensions.get('window').width\n  }\n});\nexport default function App() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      screenOptions: {\n        headerStyle: {\n          backgroundColor: '#1F2328'\n        },\n        headerTintColor: 'white',\n        headerTitleStyle: {\n          fontWeight: 'bold',\n          fontSize: 20\n        }\n      },\n      children: [_jsx(Stack.Screen, {\n        name: \"Home\",\n        component: HomeScreen,\n        options: {\n          title: 'Slack Identity'\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Web\",\n        component: WebScreen,\n        options: {\n          title: 'Git Profile',\n          headerBackTitleVisible: false\n        }\n      })]\n    })\n  });\n}","map":{"version":3,"names":["React","useState","StyleSheet","Text","View","Image","TouchableOpacity","Dimensions","WebView","NavigationContainer","createStackNavigator","jsx","_jsx","jsxs","_jsxs","Stack","HomeScreen","_ref","navigation","style","styles","container","children","imageView","source","require","profilePics","slackName","onPress","navigate","button","buttonText","WebScreen","gitUrl","uri","webViewStyle","create","backgroundColor","flex","justifyContent","alignItems","borderRadius","elevation","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","resizeMode","fontWeight","fontSize","color","marginVertical","borderWidth","get","App","Navigator","screenOptions","headerStyle","headerTintColor","headerTitleStyle","Screen","name","component","options","title","headerBackTitleVisible"],"sources":["C:/Users/user/Documents/HNG intern/mobile/stage_1/App.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { StyleSheet, Text, View, Image, TouchableOpacity, Dimensions } from 'react-native';\nimport { WebView } from 'react-native-webview'\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\n\nconst Stack = createStackNavigator();\n\n\nfunction HomeScreen({ navigation }) {\n\n  return (\n    <View style={styles.container}>\n      <View>\n      <View style={styles.imageView}>\n        <Image source={require('./assets/slackProfilePicture.png')} style={styles.profilePics} />\n      </View>\n      <Text style={styles.slackName}>AjKenz</Text>\n      </View>\n      <TouchableOpacity onPress={() => navigation.navigate('Web')} style={styles.button}>\n        <Text style={styles.buttonText}>Open GitHub</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nfunction WebScreen() {\n  const gitUrl = 'https://github.com/AjKenz'\n  return (\n    <View style={styles.container}>\n      <WebView source={{ uri: gitUrl }} style={styles.webViewStyle} />\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#fff0',\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\nimageView: {\n    borderRadius: 10,\n    elevation: 5,\n    shadowColor: 'black',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.4,\n    shadowRadius: 3,\n  },\n  profilePics: {\n    width: 300,\n    height: 300,\n    borderRadius: 10,\n    resizeMode: 'stretch',\n\n  },\n  slackName: {\n    fontWeight: 'bold',\n    fontSize: 30,\n    color: '#000',\n  },\n  button: {\n    width: '30%',\n    height: 50,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: 50,\n    marginVertical: 50,\n    borderWidth: 2,\n    elevation: 5,\n    shadowColor: 'black',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.4,\n    shadowRadius: 3,\n  },\n  buttonText: {\n    color: '#000',\n    fontWeight: 'bold'\n  },\n  webViewStyle: {\n    width: Dimensions.get('window').width\n  }\n});\n\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator screenOptions={{\n        headerStyle: {\n          backgroundColor: '#1F2328',\n        },\n        headerTintColor: 'white',\n        headerTitleStyle: {\n          fontWeight: 'bold',\n          fontSize: 20\n        },\n      }}>\n        <Stack.Screen name=\"Home\" component={HomeScreen} options={{ title: 'Slack Identity' }} />\n        <Stack.Screen name=\"Web\" component={WebScreen} options={{ title: 'Git Profile', headerBackTitleVisible: false }} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}